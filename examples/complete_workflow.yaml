name: Complete Video Processing Workflow
description: Extract audio, split into segments, transcribe, format and correct transcription
output: ./output
# Results will be stored in a subfolder named like "Complete_Video_Processing_Workflow-20231015-120530"

steps:
  - name: Extract Audio
    module: extract
    parameters:
      input: ./tests/video-test.mov # Input can be overridden with --input CLI flag
      outputName: "audio.wav"   # Set consistent output file name
      audioFormat: wav
      sampleRate: 16000
      channels: 1
      
  - name: Transcribe Audio
    module: transcribe
    parameters:
      input: "${output}/audio.wav"  # This will be resolved to the actual output subfolder path
      outputFileName: "transcript"  # Set consistent output file name
      model: "whisper"
      # Language is optional - if not specified, Whisper will auto-detect
      # language: "Spanish"  # Uncomment to force a specific language
      outputFormat: "srt"
      whisperParams: "--model large-v2 --beam_size 5 --temperature 0.0 --best_of 5 --word_timestamps True --threads 16 --patience 1.0 --condition_on_previous_text True"

  - name: Format Transcription
    module: format
    parameters:
      input: "${output}/transcript.srt"  # Use the output from transcribe step
      outputFileName: "transcript"   # Set consistent output file name
      removePatterns: # Will remove these patterns from the transcript
        - "Subt√≠tulos realizados por la comunidad de Amara\\.org"
      cleanFileSuffix: "_clean"

  - name: Correct With ChatGPT
    module: chatgpt
    parameters:
      input: "${output}/transcript_clean.txt"  # Use the output from format step
      outputFileName: "transcript_corrected"    # Specific output file name (without extension)
      promptTemplate: "./prompts/transcription_correction.yaml"  # Using YAML prompt template
      targetLanguage: "auto"   # Auto-detect language
      model: "gpt-4o"
      temperature: 0.1
      maxTokens: 16000
      outputSuffix: "_corrected" 
      
  - name: Generate Social Media Content
    module: sns
    parameters:
      input: "${output}/transcript_corrected.txt"  # Use the output from chatgpt step
      outputFileName: "social_media_content"     # Set descriptive output file name
      model: "gpt-4o"
      temperature: 0.8  # Slightly higher temperature for creative content
      maxTokens: 16000   # Increased for more detailed content
      language: "Spanish"  # Generate content in Spanish
      promptFilePath: "./prompts/sns_content.yaml"  # Custom prompt template file (optional)
      
  - name: Generate Shorts Suggestions
    module: shorts
    parameters:
      input: "${output}/transcript_corrected.txt"  # Use the corrected transcript
      outputFileName: "shorts_suggestions"         # Output YAML file name (without extension)
      model: "gpt-4o"
      temperature: 0.8                             # Higher temperature for creative suggestions
      maxTokens: 16000
      minDuration: 30                              # Minimum clip duration in seconds
      maxDuration: 60                              # Maximum clip duration in seconds
      promptFilePath: "./prompts/shorts_prompts.yaml"  # Quality-focused prompt template that doesn't limit number of suggestions
      
  - name: Extract Shorts Clips
    module: extractshorts
    parameters:
      input: "${output}/shorts_suggestions.yaml"   # Use the shorts suggestions YAML from previous step
      videoFile: "./tests/video-test.mov"          # IMPORTANT: Should match the original input video
      outputFormat: "mp4"                          # Output video format
      ffmpegParams: "-c:v libx264 -c:a aac -b:a 128k"  # Optional: encode to reduce file size
      quietFlag: true                              # Suppress verbose ffmpeg output
      